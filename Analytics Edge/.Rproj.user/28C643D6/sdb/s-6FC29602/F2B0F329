{
    "contents" : "eBayTest <- read.csv(\"eBayiPadTest.csv\")\neBayTrain <- read.csv(\"eBayiPadTrain.csv\")\n\n\neBayTrain1 <- eBayTrain\neBayTrain1$description <- NULL\neBayTrain1$biddable <- as.factor(eBayTrain1$biddable)\n\nlibrary(rpart)\nlibrary(rpart.plot)\n\ncutoff <- 0.5 #0.65 to 0.70 looks good\n\neBayTree1 <- rpart(sold~. -UniqueID,data=eBayTrain1,method=\"class\")\npredCART1 <- predict(eBayTree1)\nresCART1 <- table(eBayTrain$sold,predCART1[,2]>cutoff) #change cutOFF\naccCART1 <- (resCART1[1,1]+resCART1[2,2])/sum(resCART1)\n\n\n# lets have fun with description\n\nlibrary(tm)\ncorpus <- Corpus(VectorSource(eBayTrain$description))\ncorpus <- tm_map(corpus, content_transformer(tolower))\ncorpus = tm_map(corpus, PlainTextDocument)\ncorpus = tm_map(corpus, removePunctuation)\ncorpus = tm_map(corpus, removeWords, stopwords(\"english\"))\ncorpus = tm_map(corpus, stemDocument)\ndtm = DocumentTermMatrix(corpus)\n\nspdtm= removeSparseTerms(dtm, 0.98)\neBayTrain_des <- as.data.frame(as.matrix(spdtm))\ncolnames(eBayTrain_des) = make.names(colnames(eBayTrain_des))\n\n# eBayTrain_des$sold = as.factor(eBayTrain_des$sold)\n\nlibrary(\"wordcloud\")\nlibrary(\"RColorBrewer\")\n# wordcloud(corpus, scale=c(2, .25))\nwordcloud(colnames(eBayTrain_des), colSums(eBayTrain_des), rot.per=0.3, colors=palette(),scale=c(2, .25))\n\n# adding new variables\neBayTrain2 <- eBayTrain1\n#0.95 threshold\neBayTrain2$Dgood <- as.factor(eBayTrain_des$good)\neBayTrain2$Dnew <- as.factor(eBayTrain_des$new)\neBayTrain2$Dscratch <- as.factor(eBayTrain_des$scratch)\neBayTrain2$Dcondit <- as.factor(eBayTrain_des$condit)\neBayTrain2$Dscreen <- as.factor(eBayTrain_des$screen)\neBayTrain2$Duse <- as.factor(eBayTrain_des$use)\neBayTrain2$Dwork <- as.factor(eBayTrain_des$work)\neBayTrain2$Dipad <- as.factor(eBayTrain_des$ipad)\n\n#0.98 threshold\neBayTrain2$Dbox <- as.factor(eBayTrain_des$box)\neBayTrain2$Dcase <- as.factor(eBayTrain_des$case)\neBayTrain2$Dinclud <- as.factor(eBayTrain_des$includ)\neBayTrain2$Dperfect <- as.factor(eBayTrain_des$perfect)\neBayTrain2$Dcrack <- as.factor(eBayTrain_des$crack)\neBayTrain2$Dexcel <- as.factor(eBayTrain_des$excel)\n\n#removing unsignificant variables and adding significant text\neBayTrain3 <- eBayTrain1\n# eBayTrain3$cellular <- NULL\n# eBayTrain3$carrier <- NULL\n# eBayTrain3$color <- NULL\neBayTrain3$Dexcel <- eBayTrain2$Dexcel\neBayTrain3$Dscratch <- eBayTrain2$Dscratch\n\neBayTree2 <- rpart(sold~. -UniqueID,data=eBayTrain2,method=\"class\")\npredCART2 <- predict(eBayTree2)\nresCART2 <- table(eBayTrain2$sold,predCART2[,2]>cutoff) #change cutOFF\naccCART2 <- (resCART2[1,1]+resCART2[2,2])/sum(resCART2)\n\n\neBayTree3 <- rpart(sold~. -UniqueID,data=eBayTrain3,method=\"class\")\npredCART3 <- predict(eBayTree3)\nresCART3 <- table(eBayTrain3$sold,predCART3[,2]>cutoff) #change cutOFF\naccCART3 <- (resCART3[1,1]+resCART3[2,2])/sum(resCART3)\n\n# trying logistic regression\n\nLogReg1 <- glm(sold~. -UniqueID,data=eBayTrain1,family=\"binomial\")\nLogReg2 <- glm(sold~. -UniqueID,data=eBayTrain2,family=\"binomial\")\nLogReg3 <- glm(sold~. -UniqueID,data=eBayTrain3,family=\"binomial\")\n\npredLR1 <- predict(LogReg1,type=\"response\")\nresLR1 <- table(eBayTrain1$sold,predLR1>cutoff)\naccLR1 <- (resLR1[1,1]+resLR1[2,2])/sum(resLR1)\n\npredLR2 <- predict(LogReg2,type=\"response\")\nresLR2 <- table(eBayTrain2$sold,predLR2>cutoff)\naccLR2 <- (resLR2[1,1]+resLR2[2,2])/sum(resLR2)\n\npredLR3 <- predict(LogReg3,type=\"response\")\nresLR3 <- table(eBayTrain3$sold,predLR3>cutoff)\naccLR3 <- (resLR3[1,1]+resLR3[2,2])/sum(resLR3)\n\nLR3ok <- eBayTrain3$sold==(predLR3>cutoff)\nLR3perf <- mean(LR3ok)\ntapply(LR3ok,eBayTrain$productline,mean)\ntapply(LR3ok,eBayTrain$biddable,mean)\n\n# Train set AUC \nlibrary(ROCR)\nprint(\"Train set AUC for LR1\")\nROCRpred = prediction(predLR1, eBayTrain3$sold)\nprint(as.numeric(performance(ROCRpred, \"auc\")@y.values))\n# [1] 0.8652028\n\n\nprint(\"Train set AUC for LR3\")\nROCRpred = prediction(predLR3, eBayTrain3$sold)\nprint(as.numeric(performance(ROCRpred, \"auc\")@y.values))\n# [1] 0.8629527\n\n# prepare the Corpus for the Test Set\ncorpusTest <- Corpus(VectorSource(eBayTest$description))\ncorpusTest <- tm_map(corpusTest, content_transformer(tolower))\ncorpusTest = tm_map(corpusTest, PlainTextDocument)\ncorpusTest = tm_map(corpusTest, removePunctuation)\ncorpusTest = tm_map(corpusTest, removeWords, stopwords(\"english\"))\ncorpusTest = tm_map(corpusTest, stemDocument)\ndtmTest = DocumentTermMatrix(corpusTest)\n\nspdtmTest= removeSparseTerms(dtmTest, 0.98)\neBayTest_des <- as.data.frame(as.matrix(spdtmTest))\ncolnames(eBayTest_des) = make.names(colnames(eBayTest_des))\n\neBayTest3 <- eBayTest\neBayTest3$biddable <- as.factor(eBayTest3$biddable)\neBayTest3$Dexcel <- as.factor(eBayTest_des$excel)\neBayTest3$Dscratch <- as.factor(eBayTest_des$scratch)\n\npredTestLR3 <- predict(LogReg3,newdata=eBayTest3,type=\"response\")\n# predTestLR3cut <- as.numeric(predTestLR3>0.65)\n\n# Regression Tree with cross-validation\n# Load libraries for cross-validation\nlibrary(caret)\nlibrary(e1071)\n\nset.seed(123)\n# Number of folds\ntr.control = trainControl(method = \"cv\", number = 10)\n\n# cp values\ncp.grid = expand.grid( .cp = seq(0.01,0.5,0.01))\n\n# Cross-validation\ntr = train(sold ~ . -UniqueID, data = eBayTrain3, method = \"rpart\", trControl = tr.control, tuneGrid = cp.grid,minbucket=10)\n\n# Extract tree\nbest.tree = tr$finalModel\nprp(best.tree)\n\neBayTree_CV <- rpart(sold ~ . -UniqueID, data = eBayTrain3,method=\"class\", cp = 0.06, minbucket=10)\n\n# Make predictions\nbest.tree.pred = predict(best.tree)\nresBestTree <- table(eBayTrain3$sold,best.tree.pred>cutoff)\naccBestTree <- (resBestTree[1,1]+resBestTree[2,2])/sum(resBestTree)\n\n# Train set AUC \nlibrary(ROCR)\nprint(\"Train set AUC for CART with CV\")\nROCRpred = prediction(best.tree.pred, eBayTrain3$sold)\nprint(as.numeric(performance(ROCRpred, \"auc\")@y.values))\n\n#Random Forest\nlibrary(randomForest)\n\n# Try again\n\neBayTrain3$sold <- as.factor(eBayTrain3$sold) #necessary for Random Forest\n\nset.seed(456)\n\neBayForest = randomForest(sold ~ .-UniqueID, data = eBayTrain3, ntree=200, nodesize=10 )\n\n# Make predictions\nPredForest = predict(eBayForest,type=\"prob\")[,2]\nresForest <- table(eBayTrain3$sold, PredForest>cutoff)\naccForest <- (resForest[1,1]+resForest[2,2])/sum(resForest)\n\n# Train set AUC \nlibrary(ROCR)\nprint(\"Train set AUC for Random Forest\")\nROCRpred = prediction(PredForest, eBayTrain3$sold)\nprint(as.numeric(performance(ROCRpred, \"auc\")@y.values))\n#[1] 0.8589567\n\nsubmission  <-  data.frame(UniqueID = eBayTest$UniqueID, Probability1 = predTestLR3)\nwrite.csv(submission,\"submission.csv\",row.names=FALSE)\n\n",
    "created" : 1438656287651.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1850624458",
    "id" : "F2B0F329",
    "lastKnownWriteTime" : 1438656299,
    "path" : "~/coursera/Analytics Edge/Kaggle_MIT.R",
    "project_path" : "Kaggle_MIT.R",
    "properties" : {
        "tempName" : "Untitled2"
    },
    "relative_order" : 4,
    "source_on_save" : true,
    "type" : "r_source"
}